:host {
  font-family:
    system-ui,
    -apple-system,
    BlinkMacSystemFont,
    'Segoe UI',
    Roboto,
    Oxygen,
    Ubuntu,
    Cantarell,
    'Open Sans',
    'Helvetica Neue',
    sans-serif;
    height: 100%;
}

// Enhanced navigation bar styles
.nav-action-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem;
  border-bottom: 1px solid var(--border-color, #e0e0e0);
  background-color: var(--surface-color, #f5f5f5);
  min-height: 48px;

  // Prevent text selection in selection mode
  &.selection-mode {
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
  }

  .nav-section {
    display: flex;
    align-items: center;
  }

  .action-section {
    display: flex;
    align-items: center;

    .individual-actions {
      display: flex;
      align-items: center;
      gap: 0.25rem;
    }

    .bulk-actions {
      display: flex;
      align-items: center;
      gap: 0.25rem;

      .selection-count {
        font-size: 0.875rem;
        font-weight: 500;
        color: var(--text-secondary, #666);
        margin-right: 0.5rem;
      }
    }
  }
}

// Enhanced session selection styles
.chat-history-list {
  // Prevent text selection in selection mode
  &.selection-mode {
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
  }

  .chat-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.5rem;
    cursor: pointer;
    border-radius: 0.5rem;
    min-height: 25px;
    max-height: 25px;

    // Ensure proper content alignment within the fixed height
    .chat-title {
      flex: 1;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      user-select: none;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
    }

    // Selection mode specific styles
    &.selection-mode {
      user-select: none;

      &:hover:not(.selected) {
        background-color: var(--hover-color, rgba(0, 0, 0, 0.04));
      }

      &.selected {
        background-color: var(--selection-color, rgba(25, 118, 210, 0.12));
      }
    }

    // Normal mode hover (when not in selection mode)
    &:not(.selection-mode):hover {
      background-color: var(--hover-color, rgba(0, 0, 0, 0.04));
    }

    // Active session styling
    &.active {
      background-color: var(--primary-color, rgba(25, 118, 210, 0.08));
      font-weight: 500;
    }
  }
}

// Session action area - right side for checkboxes
.session-action-area {
  width: 24px;
  margin-left: 0.5rem;
  flex-shrink: 0;
  display: flex;
  align-items: center;
  justify-content: center;

  .session-checkbox {
    margin: 0;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;

    ::ng-deep .mat-mdc-checkbox {
      height: 24px;

      .mdc-checkbox {
        display: flex;
        align-items: center;
        padding: 0;
      }

      .mdc-form-field {
        margin: 0;
        padding: 0;
        display: flex;
        align-items: center;
      }
    }

    ::ng-deep .mat-checkbox-inner-container {
      width: 16px;
      height: 16px;
      margin: 0;
    }
  }
}

// Invisible placeholder for consistent spacing
.session-placeholder {
  width: 24px;
  height: 24px;
}

// Square button styling
.square-button {
  --square-button-size: 40px;

  width: var(--square-button-size, 48px);
  height: var(--square-button-size, 48px);
  padding: calc((var(--square-button-size, 48px) - var(--square-icon-size, 24px)) / 2);
  border-radius: 0.5rem;

  mat-icon {
    width: var(--square-icon-size, 24px);
    height: var(--square-icon-size, 24px);
    line-height: var(--square-icon-size, 24px);
    font-size: var(--square-icon-size, 24px);
  }

  ::ng-deep .mat-mdc-button-persistent-ripple {
    border-radius: 0.5rem;
  }

  ::ng-deep .mat-mdc-button-touch-target {
    width: var(--square-button-size, 48px);
    height: var(--square-button-size, 48px);
  }

  &[disabled] {
    opacity: 0.5;
    cursor: not-allowed;

    &:hover {
      background-color: transparent;
    }
  }

  &:not([disabled]):hover {
    background-color: var(--hover-color, rgba(0, 0, 0, 0.04));
  }
}

// Global form field styles
:host ::ng-deep mat-form-field {
  width: 100% !important;
  display: block !important;
  
  // Apply rounded corners to the form field
  .mdc-text-field--filled {
    border-radius: 1rem !important;
    border-top-left-radius: 1rem !important;
    border-top-right-radius: 1rem !important;
    
    &::before {
      border-radius: 1rem !important;
    }
    
    .mat-mdc-form-field-focus-overlay {
      border-radius: 1rem !important;
    }
    
    // Remove the underline
    .mdc-line-ripple {
      display: none !important;
    }
  }
  
  // Remove bottom spacing that's normally reserved for the underline
  .mat-mdc-form-field-subscript-wrapper {
    display: none !important;
  }
  
  // Make sure the focused state maintains rounded corners
  &.mat-focused .mdc-text-field--filled {
    border-radius: 1rem !important;
    border-top-left-radius: 1rem !important;
    border-top-right-radius: 1rem !important;
  }
  
  // Style the send button in the input field
  .mat-mdc-form-field-icon-suffix {
    display: flex;
    align-items: center;
    
    .mat-mdc-icon-button {
      width: 36px;
      height: 36px;
      padding: 6px;
      line-height: 1;
      border-radius: 50%;
      
      .mat-icon {
        width: 24px;
        height: 24px;
        font-size: 24px;
        line-height: 24px;
      }
    }
  }
}

textarea {
  max-height: 200px;
  border-radius: 1rem !important;
  
  // Remove border and outline focus styles that might interfere
  &:focus {
    outline: none !important;
  }
}

// Global styles with ::ng-deep
// ::ng-deep {
//   .as-split {
//     height: 100% !important;
//     width: 100% !important;
//     .as-split-area {
//       height: 100% !important;
//       overflow: hidden;
//     }
//     .as-split-area:first-child {
//       order: 0 !important;
//     }
//     .as-split-area:last-child {
//       order: 1 !important;
//     }
//     .as-split-gutter-horizontal {
//       height: 100% !important;
//       .as-split-gutter-icon {
//         height: 30px !important;
//         left: 0 !important; // Keep the gutter icon on the far left
//       }
//     }
//     .as-split-gutter {
//       background-color: #e0e0e0 !important;
//       height: 100% !important;
//       width: 4px !important; // Slightly narrower gutter
//       &:hover {
//         background-color: #ccc !important;
//       }
//       .as-split-gutter-icon {
//         background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='3' height='30' viewBox='0 0 8 30'><path d='M2 5h4v5H2zm0 10h4v5H2zm0 10h4v5H2z' fill='%23888'/></svg>") !important;
//         width: 3px !important; // Narrower gutter icon
//       }
//     }
//   }
// }

.chat-container {
  height: calc(100% - 24px);
  display: flex;
  flex-direction: row;
  position: relative;
  
  // Collapse button container - floating above other content
  .collapse-button-container {
    position: absolute;
    left: 10px;
    top: 10px;
    z-index: 100;
    display: flex;
    align-items: center;
    justify-content: center;
    pointer-events: all;
  }
  
  // Split container takes full width
  .split-container {
    flex: 1;
    width: 100%;
    height: 100%;
  }
}

.sidebar {
  height: 100%;
  background-color: #f5f5f5; // Light grey background to match server implementation
  border-right: 1px solid #e0e0e0;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  
  .sidebar-header {
    display: flex;
    justify-content: flex-end; // Align to the right instead of space-between
    align-items: center;
    padding: 8px 16px;
    border-bottom: 1px solid #e0e0e0;
    height: 52px; // Match main header height
    
    .spacer {
      flex: 1;
    }
  }
  
  .chat-list {
    display: flex;
    flex-direction: column;
    gap: 1.25rem; // Match server's gap exactly
    margin: 0.5rem 0;
    font-size: 0.875rem;
    line-height: 1.25rem;
    overflow: hidden auto;
    padding: 0 0.75rem; // Keep horizontal padding
    
    .chat-history-block {
      position: relative;
      
      .block-header {
        position: sticky;
        top: 0;
        background-color: #f5f5f5; // Match sidebar background
        z-index: 1;
        
        span {
          padding: 0.75rem 0.5rem 0.5rem; // Match server padding exactly
          font-weight: 600;
          word-break: break-all;
          text-overflow: ellipsis;
          overflow: hidden;
          display: block;
        }
      }
    }
    
    .chat-history-list {
      margin: 0;
      padding: 0;
      list-style: none;
    }
    
    .chat-item {
      border-radius: 0.5rem;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0.5rem; // Match server's padding exactly
      cursor: pointer;
      
      &:hover {
        background-color: rgba(0, 0, 0, 0.04);
      }
      
      &.active {
        background-color: rgba(0, 0, 0, 0.08);
      }
      
      .chat-title {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        flex: 1; // Let the title take available space
        min-width: 0; // This is crucial for text-overflow to work properly with flexbox
        max-width: calc(100% - 35px); // Adjust space reserved for the button
        display: inline-block; // Ensure it respects width constraints
        padding-right: 5px; // Add some padding between text and button
      }
    }
  }
}

.main-content {
  height: 100%;
  display: flex;
  flex-direction: column;
  background-color: #ffffff;
  overflow: hidden; /* Ensures content doesn't overflow */

  &.sidebar-collapsed {
    padding-left: 40px; // Make space for the collapse button when sidebar is hidden
    
    .user-input {
      // No need for negative margin adjustments when we handle the container appropriately
    }
  }

  .chat-header {
    flex: 0 0 auto; /* Don't shrink or grow */
    padding: 0.75rem;
    display: flex;
    z-index: 10;
    border-bottom: 1px solid #e0e0e0;
    height: auto;
    
    .section {
      display: flex;
      align-items: center;

      &.left {
        overflow: hidden;
      }
      
      &.right {
        margin-left: auto;
      }
    }
    
    .model-selector {
      box-sizing: border-box;
      font-weight: 600;
      font-size: 1.125rem;
      width: 320px;
      height: 2.5rem;
      line-height: 1.75rem;
      padding: 0.375rem 0.75rem;
      border-radius: 0.5rem;
      overflow: hidden;
      align-items: center;
      display: flex;
      white-space: nowrap;
      user-select: none;
    }
    
    .spacer {
      flex: 1;
    }
  }
  
  app-chat-screen {
    flex: 1 1 auto; /* Allow grow and shrink */
    overflow: hidden;
    display: flex;
    flex-direction: column;
    min-height: 0; /* Critical for allowing flex children to scroll */
  }
}

.user-input {
  width: 100%;
  flex: 0 0 auto; /* Don't grow or shrink */
  padding-bottom: 0.75rem;
  position: relative;
  z-index: 5;
  background-color: #ffffff;
  display: flex;
  flex-direction: column;
  align-items: center; /* Center content horizontally */

  .prompt-box {
    width: 100%;
    max-width: 48rem; /* Match server styling */
    display: flex;
    padding: 0 0.75rem;
    margin: 0 auto;
    box-sizing: border-box;
    
    @media (min-width: 1200px) {
      padding: 0 1.25rem;
    }

    @media (max-width: 1199px) and (min-width: 992px) {
      max-width: 40rem;
      padding: 0 0.25rem;
    }

    @media (max-width: 991px) and (min-width: 768px) {
      padding: 0 1rem;
    }
    
    // Style for the form field to match server
    .form-field {
      ::ng-deep .mat-mdc-text-field-wrapper {
        background-color: #f5f5f5; // Light gray background
        border-radius: 1rem !important; // Rounded corners
        padding: 0 0.5rem;
        transition: background-color 0.2s ease;
        // Add subtle border/shadow instead of the underline
        box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.12);
        margin-bottom: 0; // Remove bottom margin that's typically used for the line
        
        // Change the focused and hover state colors
        &:hover {
          background-color: #f0f0f0;
        }
      }
      
      // Make sure the textarea itself has proper padding
      ::ng-deep .mat-mdc-form-field-infix {
        padding-top: 0.75rem;
        padding-bottom: 0.75rem;
        min-height: unset; // Override min-height to keep it compact
      }
      
      // Style the placeholder text
      ::ng-deep .mat-mdc-input-element::placeholder {
        color: rgba(0, 0, 0, 0.6);
      }
      
      // Add focused style with a subtle outline instead of underline
      &.mat-focused ::ng-deep .mat-mdc-text-field-wrapper {
        box-shadow: 0 0 0 2px rgba(63, 81, 181, 0.4); // Primary color with low opacity
      }
    }
  }
  
  .status-hint {
    font-size: 0.75rem;
    line-height: 1rem;
    text-align: center;
    padding: 0.5rem 0;
    min-height: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
  }
}

:host-context(.dark-theme) .user-input {
  background-color: #303030;
}

:host-context(.dark-theme) {
  ::ng-deep .as-split-gutter {
    background-color: #3d3d3d !important;
    &:hover {
      background-color: #4d4d4d !important;
    }
    .as-split-gutter-icon {
      background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='8' height='30' viewBox='0 0 8 30'><path d='M2 5h4v5H2zm0 10h4v5H2zm0 10h4v5H2z' fill='%23ccc'/></svg>") !important;
    }
  }
  
  .sidebar {
    background-color: #232323;
    border-right-color: #3d3d3d;
    
    .nav-action-bar {
      background-color: #232323;
      border-bottom-color: #3d3d3d;
    }
    
    .sidebar-header {
      border-bottom-color: #3d3d3d;
    }
    
    .chat-list {
      .chat-history-block {
        .block-header {
          background-color: #232323;
        }
      }
      
      .chat-item {
        &:hover {
          background-color: rgba(255, 255, 255, 0.08);
        }
        &.active {
          background-color: rgba(255, 255, 255, 0.12);
        }
        
        // Make sure the more menu button is visible in dark mode
        .session-button {
          color: rgba(255, 255, 255, 0.7);
        }
      }
    }
  }
  
  .main-content {
    background-color: #303030;
    
    .chat-header {
      border-bottom-color: #3d3d3d;
    }
    
    app-chat-screen {
      background-color: #303030;
    }
    
    .user-input {
      background-color: #303030;
      
      // Dark theme form field styling
      .prompt-box .form-field {
        ::ng-deep .mat-mdc-text-field-wrapper {
          background-color: #424242; // Darker background for dark theme
          box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.12); // Subtle border for dark theme
          
          &:hover {
            background-color: #505050;
          }
        }
        
        // Style the placeholder text for dark theme
        ::ng-deep .mat-mdc-input-element::placeholder {
          color: rgba(255, 255, 255, 0.6);
        }
        
        // Add focused style with a subtle outline for dark theme
        &.mat-focused ::ng-deep .mat-mdc-text-field-wrapper {
          box-shadow: 0 0 0 2px rgba(121, 134, 203, 0.5); // Lighter primary color with low opacity for dark theme
        }
      }
    }
  }
}

.square-button {
  --square-button-size: 40px;
  --square-icon-size: 24px;

  width: var(--square-button-size, 48px);
  height: var(--square-button-size, 48px);
  padding: calc((var(--square-button-size, 48px) - var(--square-icon-size, 24px)) / 2);
  border-radius: 0.5rem;

  mat-icon {
    width: var(--square-icon-size, 24px);
    height: var(--square-icon-size, 24px);
    line-height: var(--square-icon-size, 24px);
    font-size: var(--square-icon-size, 24px);
  }

  ::ng-deep .mat-mdc-button-persistent-ripple {
    border-radius: 0.5rem;
  }

  ::ng-deep .mat-mdc-button-touch-target {
    width: var(--square-button-size, 48px);
    height: var(--square-button-size, 48px);
  }
}

.session-button {
  --session-button-size: 24px;
  --session-icon-size: 18px;

  width: var(--session-button-size, 48px);
  height: var(--session-button-size, 48px);
  padding: 0px;
  border-radius: 0.5rem;

  mat-icon {
    width: var(--session-icon-size, 24px);
    height: var(--session-icon-size, 24px);
    line-height: var(--session-icon-size, 24px);
    font-size: var(--session-icon-size, 24px);
  }

  ::ng-deep .mat-mdc-button-persistent-ripple {
    border-radius: 0.5rem;
  }

  ::ng-deep .mat-mdc-button-touch-target {
    width: var(--session-button-size, 48px);
    height: var(--session-button-size, 48px);
  }
}

.model-listing {
  display: grid;
  grid-template-columns: min-content 1fr;
  grid-template-rows: 1fr 1rem;
  gap: 0px 12px;
  grid-template-areas:
    'icon name'
    'icon desc';

  .model-icon {
    margin: 0;
    grid-area: icon;
    width: 32px;
    height: 32px;
    align-self: center;
  }

  .model-name {
    grid-area: name;
  }

  .model-description {
    grid-area: desc;
    font-size: 0.75rem;
    line-height: 1rem;
  }
}

// Style menu items for session actions
::ng-deep .mat-mdc-menu-panel.mat-mdc-menu-panel {
  .mat-mdc-menu-item {
    min-height: 40px;
    font-size: 14px;
    
    .mat-icon {
      margin-right: 8px;
      font-size: 18px;
      height: 18px;
      width: 18px;
    }
  }
}